{"version":3,"sources":["components/EditXml/EditXml.module.css","components/ContentWord/ContentWord.module.css","components/WordPanel/WordPanel.module.css","components/InputXml/InputXml.module.css","lib/convert.js","lib/Word/index.js","lib/Word/Word.js","components/ContentWord/ContentWord.js","components/ContentWord/index.js","lib/delimit.js","components/ContentLine/index.js","components/ContentLine/ContentLine.js","lib/types.js","components/I18n/index.js","components/I18n/I18n.js","components/WordPanel/WordPanel.js","components/WordPanel/index.js","components/EditXml/index.js","components/EditXml/EditXml.js","components/InputXml/index.js","components/InputXml/InputXml.js","components/App/index.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","charRange","greekRegExp","RegExp","latinRegExp","mixtureRegExp","ltgFactory","dict","regExp","string","split","map","a","test","join","Convert","ltg","A","B","E","H","I","K","M","N","O","P","T","X","Y","Z","b","e","i","k","o","p","t","u","v","w","x","gtl","Α","Β","Ε","Ζ","Η","Ι","Κ","Μ","Ν","Ο","Ρ","Σ","Τ","Υ","Χ","α","β","δ","ε","ι","κ","ν","ο","ρ","τ","υ","χ","ω","isMixture","prototype","bind","isGreek","isLatin","Word","text","onChange","onUnselect","focus","this","greek","latin","convertWord","word","char","key","className","ContentWord","props","children","state","selected","undefined","focusRef","React","createRef","handleKeyUp","handleFocus","setState","event","focusCustomInput","current","selectActiveWord","styles","yellowBg","yellowBgOnHover","onFocus","onKeyUp","role","tabIndex","ref","Component","splitRegExp","Delimit","line","type","filter","ContentLine","convertLine","ii","renderWord","oneOfType","object","func","I18n","createI18n","en","title","newDoc","input","instructions","go","output","viewText","latinText","greekText","click","custom","copy","shortcuts","move","latinButton","greekButton","customInput","customButton","handleClipboardSuccess","clearSelection","WordPanel","customText","previousText","handleCustomChange","handleCustomClick","handleCustomKeyUp","handleGreekClick","handleLatinClick","renderLatinInput","renderLatinTooltip","renderGreekInput","renderGreekTooltip","renderCustomInput","renderCustomTooltip","target","value","readOnly","arrow","position","customInputFocusRef","onClick","button-type","data-clipboard-target","onSuccess","instructionsBox","instructionsList","EditXml","activeWord","convertText","textView","viewHeight","textPre","InputXml","handleChange","handleSubmit","preventDefault","onSubmit","formInput","htmlFor","id","rows","placeholder","required","autoFocus","App","handleInputXmlSubmit","href","rel","github","report","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","onbeforeunload"],"mappings":"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","file":"static/js/main.c8dec570.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textView\":\"EditXml_textView__meKBt\",\"textPre\":\"EditXml_textPre__nq0it\",\"viewHeight\":\"EditXml_viewHeight__2sEaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"yellowBg\":\"ContentWord_yellowBg__3o1s-\",\"yellowBgOnHover\":\"ContentWord_yellowBgOnHover__25vpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"instructionsBox\":\"WordPanel_instructionsBox__3fBAp\",\"instructionsList\":\"WordPanel_instructionsList__1xAxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"InputXml_formInput__31jJr\"};","const ltgMap = {\n  A: 'Α',\n  B: 'Β',\n  E: 'Ε',\n  H: 'Η',\n  I: 'Ι',\n  K: 'Κ',\n  M: 'Μ',\n  N: 'Ν',\n  O: 'Ο',\n  P: 'Ρ',\n  T: 'Τ',\n  X: 'Χ',\n  Y: 'Υ',\n  Z: 'Ζ',\n  a: 'α',\n  b: 'β',\n  e: 'ε',\n  i: 'ι',\n  k: 'κ',\n  o: 'ο',\n  p: 'ρ',\n  t: 'τ',\n  u: 'υ',\n  v: 'ν',\n  w: 'ω',\n  x: 'χ',\n};\n\nconst gtlMap = {\n  Α: 'A',\n  Β: 'B',\n  Ε: 'E',\n  Ζ: 'Z',\n  Η: 'H',\n  Ι: 'I',\n  Κ: 'K',\n  Μ: 'M',\n  Ν: 'N',\n  Ο: 'O',\n  Ρ: 'P',\n  Σ: 'E',\n  Τ: 'T',\n  Υ: 'Y',\n  Χ: 'X',\n  α: 'a',\n  β: 'b',\n  δ: 'd',\n  ε: 'e',\n  ι: 'i',\n  κ: 'k',\n  ν: 'v',\n  ο: 'o',\n  ρ: 'p',\n  τ: 't',\n  υ: 'u',\n  χ: 'x',\n  ω: 'w',\n};\n\nconst charRange = {\n  greek: 'αΑβΒγΓδΔεΕζΖηΗθΘιΙκΚλΛμΜνΝξΞοΟπΠρῤῥΡῬςϲϹσΣτΤυΥφΦχΧψΨωΩἀἁάὰᾶᾳᾀᾁᾴᾲᾷἄἅἂἃἆἇᾄᾅᾂᾃᾆᾇἈἉΆᾺᾼᾈᾉἌἍἊἋἎἏᾌᾍᾊᾋᾎᾏἐἑέὲἒἓἔἕἘἙΈῈἚἛἜἝἠἡήὴῆῃᾐᾑῄῂῇἤἥἢἣἦἧᾔᾕᾒᾓᾖᾗἨἩΉῊῌᾘᾙἬἭἪἫἮἯᾜᾝᾚᾛᾞᾟἰἱίὶῖϊἲἳἴἵἶἷΐῒῗἸἹΊῚΪἺἻἼἽἾἿὀὁόὸὂὃὄὅὈὉΌῸὊὋὌὍὐὑύὺῦϋὒὓὔὕὖὗΰῢῧὙΎῪΫὛὝὟὠὡώὼῶῳᾠᾡῴῲῷὤὥὢὣὦὧᾤᾥᾢᾣᾦᾧὨὩΏῺῼᾨᾩὬὭὪὫὮὯᾬᾭᾪᾫᾮᾯ',\n  latin: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n};\n\nconst greekRegExp = new RegExp(`[${charRange.greek}]`);\nconst latinRegExp = new RegExp(`[${charRange.latin}]`);\nconst mixtureRegExp = new RegExp(`([${charRange.greek}][${charRange.latin}])|([${charRange.latin}][${charRange.greek}])`);\n\nconst ltgFactory = (dict, regExp) => (\n  (string) => string.split('').map((a) => (regExp.test(a) ? a : (dict[a] || '?'))).join('')\n);\n\nconst Convert = {\n  ltg: ltgFactory(ltgMap, greekRegExp),\n  gtl: ltgFactory(gtlMap, latinRegExp),\n  isMixture: RegExp.prototype.test.bind(mixtureRegExp),\n  isGreek: RegExp.prototype.test.bind(greekRegExp),\n  isLatin: RegExp.prototype.test.bind(latinRegExp),\n};\n\nexport default Convert;\n","import Word from './Word';\n\nexport default Word;\n","import Convert from '../convert';\n\nclass Word {\n  constructor(text, onChange, onUnselect, focus) {\n    this.text = text || '';\n    this.onChange = onChange || (() => {});\n    this.onUnselect = onUnselect || (() => {});\n    this.focus = focus || (() => {});\n\n    this.greek = Convert.ltg(this.text);\n    this.latin = Convert.gtl(this.text);\n  }\n}\n\nexport default Word;\n","import React, { Component } from 'react';\nimport { node, func } from 'prop-types';\n\nimport Convert from '../../lib/convert';\nimport Word from '../../lib/Word';\n\nimport styles from './ContentWord.module.css';\n\nconst convertChar = (char, key) => {\n  if (Convert.isGreek(char)) return <span key={key} className=\"text-danger\">{char}</span>;\n  if (Convert.isLatin(char)) return <span key={key} className=\"text-primary\">{char}</span>;\n\n  return char;\n};\n\nconst convertWord = (word) => word.split('').map((a, i) => convertChar(a, i));\n\nclass ContentWord extends Component {\n  constructor(props) {\n    super(props);\n\n    const { children } = this.props;\n\n    this.state = {\n      text: children,\n      selected: false,\n      word: undefined,\n    };\n\n    this.focusRef = React.createRef();\n\n    this.onChange = this.onChange.bind(this);\n    this.onUnselect = this.onUnselect.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.focus = this.focus.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n\n  onChange(text) {\n    this.setState({ text });\n  }\n\n  onUnselect() {\n    this.setState({ selected: false });\n  }\n\n  handleKeyUp(event) {\n    const { focusCustomInput } = this.props;\n    const { word } = this.state;\n\n    switch (event.key) {\n      case 'g':\n        this.onChange(word.greek);\n        break;\n      case 'l':\n        this.onChange(word.latin);\n        break;\n      case 'c':\n        focusCustomInput();\n        break;\n      default:\n    }\n  }\n\n  focus(text) {\n    this.setState({ text }, () => {\n      this.focusRef.current.focus();\n      this.handleFocus();\n    });\n  }\n\n  handleFocus() {\n    const { text } = this.state;\n    const { selectActiveWord } = this.props;\n    const word = new Word(text, this.onChange, this.onUnselect, this.focus);\n\n    selectActiveWord(word);\n    this.setState({ word, selected: true });\n  }\n\n  render() {\n    const { selected, text } = this.state;\n    const className = selected ? styles.yellowBg : styles.yellowBgOnHover;\n\n    return (\n      <span\n        className={className}\n        onFocus={this.handleFocus}\n        onKeyUp={this.handleKeyUp}\n        role=\"button\"\n        tabIndex=\"0\"\n        ref={this.focusRef}\n      >\n\n        {convertWord(text)}\n      </span>\n    );\n  }\n}\n\nContentWord.propTypes = {\n  children: node.isRequired,\n  selectActiveWord: func.isRequired,\n  focusCustomInput: func.isRequired,\n};\n\n\nexport default ContentWord;\n","import ContentWord from './ContentWord';\n\nexport default ContentWord;\n","// the linter incorrectly thinks some of these escapes are useless\n// with all of the \"useless\" escapes removed, the regex no longer works\n// eslint-disable-next-line no-useless-escape\nconst splitRegExp = /([\\s\\/\\\\\\(\\)\"'\\:\\,\\.;<>~\\!@#\\$%\\^&\\*\\|\\+\\=\\[\\]\\{\\}`\\?\\-…]+)/;\n\nconst split = (line) => (\n  line.split(splitRegExp).map((string) => (\n    splitRegExp.test(string) ? { type: 'delimiter', string } : { type: 'word', string }\n  )).filter(({ string }) => string !== '')\n);\n\nconst Delimit = { split };\n\nexport default Delimit;\n","import ContentLine from './ContentLine';\n\nexport default ContentLine;\n","import React, { Component } from 'react';\nimport { node, func } from 'prop-types';\n\nimport ContentWord from '../ContentWord';\nimport Delimit from '../../lib/delimit';\n\nclass ContentLine extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertLine = this.convertLine.bind(this);\n  }\n\n  convertLine(line) {\n    return Delimit.split(line).map((word, ii) => {\n      if (word.type === 'word') {\n        return this.renderWord(word, ii);\n      }\n\n      return word.string;\n    });\n  }\n\n  renderWord(word, ii) {\n    const { selectActiveWord, focusCustomInput } = this.props;\n\n    return (\n      // In this case, we don't have any identifying features besides index\n      // and multiple words can have the same text.\n      // The words are also not going to be reordered, so there shouldn't be\n      // any performance penalty to using index as key.\n      // eslint-disable-next-line react/no-array-index-key\n      <ContentWord key={ii} selectActiveWord={selectActiveWord} focusCustomInput={focusCustomInput}>\n\n        {word.string}\n      </ContentWord>\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return this.convertLine(children);\n  }\n}\n\nContentLine.propTypes = {\n  children: node.isRequired,\n  selectActiveWord: func.isRequired,\n  focusCustomInput: func.isRequired,\n};\n\nexport default ContentLine;\n","import {\n  oneOfType,\n  object,\n  func,\n  string,\n} from 'prop-types';\n\nconst RefType = oneOfType([\n  object,\n  func,\n  string,\n]);\n\n// We currently only have one type, but may have more in the future\n// eslint-disable-next-line import/prefer-default-export\nexport { RefType };\n","import I18n from './I18n';\n\nexport default I18n;\n","import { createI18n } from 'react-router-i18n';\n\nconst locales = ['en'];\n\nconst translations = {\n  en: {\n    title: 'Greek Latin Demixer',\n    newDoc: 'New Document',\n    input: {\n      title: 'Greek and Latin Demixer',\n      instructions: 'Enter text that contains Greek and Latin characters below.',\n      text: 'Text',\n      go: 'Go!',\n    },\n    output: {\n      viewText: 'View Text',\n      latinText: 'Latin text is blue. ',\n      greekText: 'Greek text is red. ',\n      click: 'Click on a word to edit it.',\n      latin: 'Latin',\n      greek: 'Greek',\n      custom: 'Custom',\n      copy: 'Copy to Clipboard',\n    },\n    shortcuts: {\n      title: 'Keyboard shortcuts',\n      move: ': move through the document',\n      latinButton: ': click Latin button',\n      greekButton: ': click Greek button',\n      customInput: ': go to Custom input',\n      customButton: ' (in custom input): click Custom button',\n    },\n  },\n};\n\nconst I18n = createI18n(\n  locales,\n  translations,\n);\n\nexport default I18n;\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\n\nimport Clipboard from 'react-clipboard.js';\nimport { Tooltip } from 'react-tippy';\n\nimport Word from '../../lib/Word';\nimport { RefType } from '../../lib/types';\nimport I18n from '../I18n';\n\nimport styles from './WordPanel.module.css';\n\nconst handleClipboardSuccess = (event) => event.clearSelection();\n\nclass WordPanel extends Component {\n  static getDerivedStateFromProps(props, state) {\n    const { word: { text } } = props;\n    const { previousText } = state;\n\n    if (text !== previousText) {\n      return { customText: text, previousText: text };\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      customText: null,\n      previousText: null,\n    };\n\n    this.handleCustomChange = this.handleCustomChange.bind(this);\n    this.handleCustomClick = this.handleCustomClick.bind(this);\n    this.handleCustomKeyUp = this.handleCustomKeyUp.bind(this);\n    this.handleGreekClick = this.handleGreekClick.bind(this);\n    this.handleLatinClick = this.handleLatinClick.bind(this);\n    this.renderLatinInput = this.renderLatinInput.bind(this);\n    this.renderLatinTooltip = this.renderLatinTooltip.bind(this);\n    this.renderGreekInput = this.renderGreekInput.bind(this);\n    this.renderGreekTooltip = this.renderGreekTooltip.bind(this);\n    this.renderCustomInput = this.renderCustomInput.bind(this);\n    this.renderCustomTooltip = this.renderCustomTooltip.bind(this);\n  }\n\n  handleCustomChange(event) {\n    this.setState({ customText: event.target.value });\n  }\n\n  handleCustomClick() {\n    const { word: { onChange } } = this.props;\n    const { customText } = this.state;\n\n    onChange(customText);\n  }\n\n  handleCustomKeyUp(event) {\n    const { word: { focus } } = this.props;\n    const { customText } = this.state;\n\n    if (event.key === 'Enter') {\n      focus(customText);\n    }\n  }\n\n  handleGreekClick() {\n    const { word: { onChange, greek } } = this.props;\n\n    onChange(greek);\n  }\n\n  handleLatinClick() {\n    const { word: { onChange, latin } } = this.props;\n\n    onChange(latin);\n  }\n\n  renderLatinInput() {\n    const { word: { latin } } = this.props;\n\n    return <input type=\"text\" readOnly className=\"form-control text-primary mb-1\" value={latin} />;\n  }\n\n  renderLatinTooltip() {\n    const { word: { latin } } = this.props;\n\n    if (latin !== '') {\n      return (\n        <Tooltip\n          arrow=\"true\"\n          position=\"top\"\n          title=\"This box contains the selected word with all Greek characters replaced with Latin characters. For example, α becomes a. Click the 'Latin' button below to insert the suggestion.\"\n        >\n\n          {this.renderLatinInput()}\n        </Tooltip>\n      );\n    }\n\n    return this.renderLatinInput();\n  }\n\n  renderGreekInput() {\n    const { word: { greek } } = this.props;\n\n    return <input type=\"text\" readOnly className=\"form-control text-danger mb-1\" value={greek} />;\n  }\n\n  renderGreekTooltip() {\n    const { word: { greek } } = this.props;\n\n    if (greek !== '') {\n      return (\n        <Tooltip\n          arrow=\"true\"\n          position=\"top\"\n          title=\"This box contains the selected word with all Latin characters replaced with Greek characters. For example, a becomes α. Click the 'Greek' button below to insert the suggestion.\"\n        >\n\n          {this.renderGreekInput()}\n        </Tooltip>\n      );\n    }\n\n    return this.renderGreekInput();\n  }\n\n  renderCustomInput() {\n    const { customInputFocusRef } = this.props;\n    const { customText } = this.state;\n\n    return (\n      <input\n        type=\"text\"\n        className=\"form-control mb-1\"\n        value={customText}\n        onChange={this.handleCustomChange}\n        onKeyUp={this.handleCustomKeyUp}\n        ref={customInputFocusRef}\n      />\n    );\n  }\n\n  renderCustomTooltip() {\n    return (\n      <Tooltip\n        arrow=\"true\"\n        position=\"top\"\n        title=\"This box allows you to edit the selected word. Click the 'Custom' button to insert the edited word.\"\n      >\n\n        {this.renderCustomInput()}\n      </Tooltip>\n    );\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"form-group\">\n          {this.renderLatinTooltip()}\n          <button type=\"button\" className=\"btn btn-block btn-primary\" onClick={this.handleLatinClick}>\n            <I18n t=\"output.latin\" />\n          </button>\n        </div>\n\n        <div className=\"form-group\">\n          {this.renderGreekTooltip()}\n          <button type=\"button\" className=\"btn btn-block btn-danger\" onClick={this.handleGreekClick}>\n            <I18n t=\"output.greek\" />\n          </button>\n        </div>\n\n        <div className=\"form-group\">\n          {this.renderCustomTooltip()}\n          <button type=\"button\" className=\"btn btn-block btn-secondary\" onClick={this.handleCustomClick}>\n            <I18n t=\"output.custom\" />\n          </button>\n        </div>\n\n        <div className=\"form-group\">\n          <Clipboard\n            button-type=\"button\"\n            className=\"btn btn-block btn-success mt-4\"\n            data-clipboard-target=\".clipboard-target\"\n            onSuccess={handleClipboardSuccess}\n          >\n\n            <I18n t=\"output.copy\" />\n          </Clipboard>\n        </div>\n\n        <div className=\"form-group\">\n          <div className={styles.instructionsBox}>\n            <h6>\n              <I18n t=\"shortcuts.title\" />\n            </h6>\n            <ul className={styles.instructionsList}>\n              <li>\n                <strong>Tab</strong>\n                <I18n t=\"shortcuts.move\" />\n              </li>\n              <li>\n                <strong>l</strong>\n                <I18n t=\"shortcuts.latinButton\" />\n              </li>\n              <li>\n                <strong>g</strong>\n                <I18n t=\"shortcuts.greekButton\" />\n              </li>\n              <li>\n                <strong>c</strong>\n                <I18n t=\"shortcuts.customInput\" />\n              </li>\n              <li>\n                <strong>Enter</strong>\n                <I18n t=\"shortcuts.customButton\" />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nWordPanel.propTypes = {\n  word: instanceOf(Word).isRequired,\n  customInputFocusRef: RefType.isRequired,\n};\n\nexport default WordPanel;\n","import WordPanel from './WordPanel';\n\nexport default WordPanel;\n","import EditXml from './EditXml';\n\nexport default EditXml;\n","import React, { Component } from 'react';\nimport { string } from 'prop-types';\n\nimport ContentLine from '../ContentLine';\nimport WordPanel from '../WordPanel';\nimport Word from '../../lib/Word';\nimport I18n from '../I18n';\n\nimport styles from './EditXml.module.css';\n\nclass EditXml extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeWord: new Word(),\n    };\n\n    this.customInputFocusRef = React.createRef();\n\n    this.convertText = this.convertText.bind(this);\n    this.selectActiveWord = this.selectActiveWord.bind(this);\n    this.focusCustomInput = this.focusCustomInput.bind(this);\n  }\n\n  convertText(text) {\n    const { selectActiveWord, focusCustomInput } = this;\n\n    return text.split('\\n').map((line, ii) => (\n      // In this case, we don't have any identifying features besides index\n      // and multiple lines can have the same text.\n      // The lines are also not going to be reordered, so there shouldn't be\n      // any performance penalty to using index as key.\n      // eslint-disable-next-line react/no-array-index-key\n      <ContentLine key={ii} selectActiveWord={selectActiveWord} focusCustomInput={focusCustomInput}>\n        {`${line} \\n`}\n      </ContentLine>\n    ));\n  }\n\n  selectActiveWord(word) {\n    const { activeWord } = this.state;\n\n    activeWord.onUnselect();\n\n    this.setState({\n      activeWord: word,\n    });\n  }\n\n  focusCustomInput() {\n    this.customInputFocusRef.current.focus();\n  }\n\n  render() {\n    const { activeWord } = this.state;\n    const { text } = this.props;\n\n    return (\n      <div className={styles.textView}>\n        <h1 className=\"h3 mt-2 mb-1 font-weight-normal\">\n          <I18n t=\"output.viewText\" />\n        </h1>\n        <h5 className=\"h5 mb-3 font-weight-normal\">\n          <span className=\"text-primary\">\n            <I18n t=\"output.latinText\" />\n          </span>\n          <span className=\"text-danger\">\n            <I18n t=\"output.greekText\" />\n          </span>\n          <I18n t=\"output.click\" />\n        </h5>\n        <div className={`row ${styles.viewHeight}`}>\n          <div className=\"col-sm-3 pt-2 border\">\n            <WordPanel word={activeWord} customInputFocusRef={this.customInputFocusRef} />\n          </div>\n          <div className=\"col-sm-9\">\n            <pre className={`${styles.textPre} clipboard-target bg-light p-1`}>\n              {this.convertText(text)}\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditXml.propTypes = {\n  text: string.isRequired,\n};\n\n\nexport default EditXml;\n","import InputXml from './InputXml';\n\nexport default InputXml;\n","import React, { Component } from 'react';\nimport { func } from 'prop-types';\n\nimport I18n from '../I18n';\nimport styles from './InputXml.module.css';\n\nclass InputXml extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: 'Αmong innumerable poetic references, cf. Ibyc. fr. 7 τᾶμος ἄυπνος \\nκλυτὸς ὅρθρος ἐγείρησιν ἀηδόνας. Simοn. fr. 73 δεῦτʼ ἀηδόνες πoλυκώτιλοι, \\nχλωραὺχενες εἰαριναί. Callim. L. P. 94 μάτηρ μέν γοερῶν οἶτον ἀηδονίδων \\nἄγε βαρὺ κλaίουσα. Aesch. Ag. 1116 τυν, τυν στένουσα, ἀηδὼν. Soph. ',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ text: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const { text } = this.state;\n    const { onSubmit } = this.props;\n\n    onSubmit(text);\n  }\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.formInput}>\n        <h1 className=\"h3 mt-2 mb-1 font-weight-normal\">\n          <I18n t=\"input.title\" />\n        </h1>\n        <h5 className=\"h5 mb-3 font-weight-normal\">\n          <I18n t=\"input.instructions\" />\n        </h5>\n        {/* We are stuck with an old version of jsx-a11y because of react scripts */}\n        {/* but this should be compliant with with newer version. */}\n        {/* Of course, disabling the eslint rules breaks the max line rules... */}\n        {/* eslint-disable-next-line max-len */}\n        {/* eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control */}\n        <label htmlFor=\"xmlInput\" className=\"sr-only\">\n          <I18n t=\"input.text\" />\n        </label>\n        <textarea\n          id=\"xmlInput\"\n          rows=\"10\"\n          className=\"form-control\"\n          placeholder=\"Enter text here ...\"\n          required\n          autoFocus\n          value={text}\n          onChange={this.handleChange}\n        />\n\n        <button className=\"mt-3 btn btn-lg btn-primary btn-block\" type=\"submit\">\n          <I18n t=\"input.go\" />\n        </button>\n      </form>\n    );\n  }\n}\n\nInputXml.propTypes = {\n  onSubmit: func.isRequired,\n};\n\nexport default InputXml;\n","import App from './App';\n\nexport default App;\n","import React, { Component } from 'react';\nimport { PerseidsHeader, PerseidsFooter } from 'perseids-react-components';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'perseids-react-components/build/css/index.css';\n\nimport EditXml from '../EditXml';\nimport InputXml from '../InputXml';\nimport I18n from '../I18n';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: null,\n    };\n\n    this.handleInputXmlSubmit = this.handleInputXmlSubmit.bind(this);\n  }\n\n  handleInputXmlSubmit(text) {\n    this.setState({ text });\n  }\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <BrowserRouter>\n        <PerseidsHeader>\n          <I18n t=\"title\" />\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\".\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <I18n t=\"newDoc\" />\n              </a>\n            </li>\n          </ul>\n        </PerseidsHeader>\n        <div className=\"text-center\">\n          <div className=\"container\">\n            {text ? (\n              <EditXml text={text} />\n            ) : (\n              <InputXml onSubmit={this.handleInputXmlSubmit} />\n            )}\n          </div>\n        </div>\n        <PerseidsFooter\n          github=\"https://github.com/perseids-project/greek-latin-demixer\"\n          report=\"https://github.com/perseids-project/greek-latin-demixer/issues\"\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-tippy/dist/tippy.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\nwindow.onbeforeunload = function() { return true; };\n"],"sourceRoot":""}